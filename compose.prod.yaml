services:
  web:
    build:
      context: ./mysite
      dockerfile: Dockerfile.prod
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env.prod
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    develop:
      watch:
        - action: rebuild
          path: .
  db:
    image: postgres
    restart: always
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "sddb_user", "-d", "sddb_prod" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
     - ./.env.prod.db
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web
volumes:
  db-data:
  static_volume:
  media_volume:
secrets:
  db-password:
    file: db/password.txt

